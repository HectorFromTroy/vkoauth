{"version":3,"sources":["serviceWorker.js","components/Welcome.jsx","components/OAuth.jsx","components/AuthError.jsx","components/Profile.jsx","VK_API.requests.jsx","App.jsx","routes.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Welcome","props","CURRENT_LOCATION","href","substring","length","className","APP_ID","API_VERSION","oAuth","startParsingAndSettingToCookies","parsedParams","parseParams","params","info","accessToken","expiresIn","userID","accessTokenStart","cookies","set","processReceivedAccessData","onAuthError","paramsString","split","Date","getTime","this","Component","AuthError","message","to","Profile","getProfileInfo","src","profileInfo","photo_100","alt","first_name","last_name","friendsInfo","map","friend","index","key","API_REQUEST","axios","create","baseURL","adapter","axiosJSONP","getProfileAndFriendsInfo","a","VK_API_CODE","profileData","Cookies","App","checkAuthorization","isAllAuthDataOK","isAccessTokenValid","isAuthorized","accessData","setState","didAccessDataAvailable","authorizationInfo","getFriendsInfo","result","friends","data","response","items","i","push","state","mainProfileInfo","authError","isAuthError","getAll","exact","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8da5b1c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nconst Welcome = props => {\r\n  //because if leave it with /#/ then vk api will MAYBE think that \r\n  //i'm trying to access via server and will send me code instead of access tokken\r\n  const CURRENT_LOCATION = window.location.href.substring(0, window.location.href.length - 3);\r\n  return (\r\n    <div className=\"welcome\">\r\n      <h1>Добро пожаловать</h1>\r\n      <a className=\"authorizationButton\" href={`https://oauth.vk.com/authorize?client_id=${props.APP_ID}&display=page&redirect_uri=${CURRENT_LOCATION}&scope=friends&response_type=token&v=${props.API_VERSION}`}>\r\n        Авторизоваться\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;","import { Component } from \"react\";\r\n\r\nexport default class oAuth extends Component {\r\n  componentDidMount(){\r\n    this.startParsingAndSettingToCookies(this.props);\r\n  };\r\n  startParsingAndSettingToCookies = props => {\r\n    try{//if params in url are not valid\r\n      const parsedParams = this.parseParams(props.match.params.info);\r\n      const {\r\n        accessToken,\r\n        expiresIn,\r\n        userID,\r\n        accessTokenStart\r\n      } = parsedParams;\r\n      props.cookies.set(\"accessToken\", accessToken);\r\n      props.cookies.set(\"expiresIn\", expiresIn);\r\n      props.cookies.set(\"userID\", userID);\r\n      props.cookies.set(\"accessTokenStart\", accessTokenStart);\r\n      props.processReceivedAccessData(parsedParams);\r\n    }\r\n    catch{\r\n      props.onAuthError();\r\n    }\r\n  }\r\n  \r\n  parseParams = paramsString => {\r\n    const params = paramsString.split(\"&\");\r\n    const accessToken = params[0].substring(13);\r\n    const expiresIn = params[1].substring(11)*1000;\r\n    const userID = params[2].substring(8);\r\n    const accessTokenStart = new Date().getTime();\r\n    return {\r\n      accessToken,\r\n      expiresIn,\r\n      userID,\r\n      accessTokenStart\r\n    };\r\n  };\r\n  render(){\r\n    return null;\r\n  };\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AuthError = props => {\r\n  return (\r\n    <main className=\"error\">\r\n      <h1>Ошибка авторизации</h1>\r\n      <p>{props.message}</p> <Link to=\"/\"> Нажмите для перехода на страницу авторизации.</Link>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AuthError;","import React, { Component } from \"react\";\r\n\r\n\r\nclass Profile extends Component{\r\n  componentDidMount(){\r\n    this.props.getProfileInfo();\r\n  };\r\n  render(){\r\n    return (\r\n      <div className=\"profile\">\r\n        <main className=\"profile-main\">\r\n          <section className=\"profile-info-container\">\r\n            <h2>Профиль</h2>\r\n            <div className=\"profile-info\">\r\n              <img src={this.props.profileInfo.photo_100} alt=\"profile avatar\" className=\"avatar\"/>\r\n              <span className=\"profile-info__first-name first-name\">\r\n                {this.props.profileInfo.first_name}\r\n              </span>\r\n              <span className=\"profile-info__last-name\">\r\n                {this.props.profileInfo.last_name}\r\n              </span>\r\n            </div>\r\n          </section>\r\n          <section className=\"friends-info-container\">\r\n            <h2>Друзья</h2>\r\n            <div className=\"friends-info\">\r\n              <ul className=\"friends-list\">\r\n                {this.props.friendsInfo.map((friend, index) => (\r\n                  <li key={index} className=\"friends-list__item\">\r\n                    <img src={friend.photo_100} alt=\"friends avatar\" className=\"avatar\"/>\r\n                    <span className=\"friends-info__first-name first-name\">\r\n                      {friend.first_name}\r\n                    </span>\r\n                    <span className=\"friends-info__last-name\">\r\n                      {friend.last_name}\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Profile;","import axios from \"axios\"; \r\nimport axiosJSONP from \"axios-jsonp\";\r\n\r\nconst API_REQUEST = axios.create({\r\n  baseURL: \"https://api.vk.com/method\",\r\n  adapter: axiosJSONP\r\n});\r\n\r\nexport const getProfileAndFriendsInfo = async ({ userID, accessToken }, API_VERSION) => {\r\n  const VK_API_CODE = `\r\n    var profileInfo = API.users.get({\r\n      \"user_id\": \"${userID}\",\r\n      \"fields\": \"photo_100\"\r\n    });\r\n    var friendsInfo = API.friends.search({\r\n      \"user_id\": \"${userID}\",\r\n      \"fields\": \"photo_100\",\r\n      \"count\": \"5\"\r\n    });\r\n    return {\r\n      \"profileInfo\": profileInfo,\r\n      \"friendsInfo\": friendsInfo\r\n    };\r\n  `;\r\n  const profileData = await API_REQUEST(`execute?code=${VK_API_CODE}&access_token=${accessToken}&v=${API_VERSION}`);\r\n  return profileData;\r\n};","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport Welcome from \"./components/Welcome.jsx\";\nimport OAuth from \"./components/OAuth.jsx\";\nimport AuthError from \"./components/AuthError.jsx\";\nimport Profile from \"./components/Profile.jsx\";\nimport { getProfileAndFriendsInfo } from \"./VK_API.requests.jsx\";\nimport { mainRoute, withParamsRoute, profileRoute, authenticationError } from \"./routes.jsx\";\n\nconst cookies = new Cookies();\n\nconst APP_ID = \"7094008\";\nconst API_VERSION = \"5.101\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      didAccessDataAvailable: false,\n      authError: {\n        isAuthError: false,\n        message: \"\"\n      },\n      authorizationInfo: this.checkAuthorization(cookies.getAll()),\n      mainProfileInfo: {\n        first_name: \"\",\n        last_name: \"\",\n        photo_100: \"\" \n      },\n      friendsInfo: []\n    };\n  };\n\n  checkAuthorization = ({ userID, accessToken, accessTokenStart, expiresIn }) => {\n    if(\n      this.isAllAuthDataOK(userID, accessToken, accessTokenStart, expiresIn) &&\n      this.isAccessTokenValid(accessTokenStart, expiresIn)\n    ){\n      return {\n        isAuthorized: true,\n        userID,\n        accessToken,\n        accessTokenStart,\n        expiresIn\n      };\n    }\n    else{\n      return {\n        isAuthorized: false\n      }\n    }\n  };\n  \n  isAllAuthDataOK = (userID, accessToken, accessTokenStart, expiresIn) => {\n    return userID && accessToken && accessTokenStart && expiresIn;\n  };\n  \n  isAccessTokenValid = (accessTokenStart, expiresIn) => new Date().getTime() < accessTokenStart + expiresIn;\n\n  processReceivedAccessData = (accessData) => {\n    this.setState({\n      didAccessDataAvailable: true,\n      authorizationInfo: {\n        isAuthorized: true,\n        ...accessData\n      }\n    });\n  };\n\n  getProfileInfo = async () => {\n    const { data } = await getProfileAndFriendsInfo(this.state.authorizationInfo, API_VERSION);\n    let { \n      first_name,\n      last_name,\n      photo_100  \n    } = data.response.profileInfo[0];\n    const friendsInfo = getFriendsInfo();\n    this.setState({\n      mainProfileInfo: {\n        first_name,\n        last_name,\n        photo_100\n      },\n      friendsInfo\n    });\n\n    function getFriendsInfo(){\n      const result = [];\n      const friends = data.response.friendsInfo.items;\n      for(let i = 0; i < friends.length; i++){\n        const {\n          first_name,\n          last_name,\n          photo_100\n        } = friends[i];\n        result.push({\n          first_name,\n          last_name,\n          photo_100\n        });\n      }\n      return result;\n    };\n  };\n\n  onAuthError = () => {\n    this.setState({\n      authError:{\n        isAuthError: true\n      }\n    });\n  };\n\n  render(){\n    return (\n      <main className=\"app\">\n        <Switch>\n          <Route exact path={mainRoute} render={\n            props => (\n              this.state.authorizationInfo.isAuthorized ?\n              <Redirect to={profileRoute} />\n              :\n              <Welcome\n                APP_ID={APP_ID}\n                API_VERSION={API_VERSION}\n              />\n            )\n          } />\n\n          <Route path={profileRoute} render={\n            props => (\n              this.state.authorizationInfo.isAuthorized ?//checking again because user can go to \"/profile\" directly from browser\n              <Profile \n                {...props}\n                profileInfo={this.state.mainProfileInfo}\n                friendsInfo={this.state.friendsInfo}\n                getProfileInfo={this.getProfileInfo}\n              />\n              :\n              <AuthError\n                message=\"Авторизационные данные не предоставлены либо срок их действия истек.\"\n              />\n            )\n          } />\n\n          <Route path={authenticationError} render={\n            () => (\n              <AuthError\n                message=\"Ошибка авторизации.\"\n              />\n            )\n          } />\n\n          <Route path={withParamsRoute} render={\n            props => (\n              this.state.didAccessDataAvailable ?\n              <Redirect to={profileRoute} />\n              :\n              !this.state.authError.isAuthError ?\n              <OAuth \n                {...props}\n                cookies={cookies}\n                processReceivedAccessData={this.processReceivedAccessData}\n                onAuthError={this.onAuthError}\n              />\n              :\n              <Redirect to={authenticationError} />\n            )\n          } />\n        </Switch>\n      </main>\n    );\n  };\n};\n\nexport default App;\n","export const mainRoute = \"/\";\r\nexport const withParamsRoute = \"/:info\";\r\nexport const profileRoute = \"/profile\";\r\nexport const authenticationError = \"/authenticationError\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App.jsx\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}